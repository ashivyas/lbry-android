stages:
  - build
  
build apk:
  stage: build
  image: ubuntu:18.04
  script:
    - export PATH=/usr/bin:$PATH
    - export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
    - dpkg --add-architecture i386
    - apt-get -qq update && apt-get -qq install curl ca-certificates software-properties-common wget
    - add-apt-repository ppa:deadsnakes/ppa -y
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    - echo "deb https://dl.bintray.com/sobolevn/deb git-secret main" | tee -a /etc/apt/sources.list
    - wget -qO - https://api.bintray.com/users/sobolevn/keys/gpg/public.key | apt-key add -
    - apt-get -qq update
    - apt-get -qq install autoconf autogen automake libtool libffi-dev build-essential python3.7 python3.7-dev python3.7-venv python3-pip ccache git libncurses5:i386 libstdc++6:i386 libgtk2.0-0:i386 libpangox-1.0-0:i386 libpangoxft-1.0-0:i386 libidn11:i386 python2.7 python2.7-dev python-pip openjdk-8-jdk unzip zlib1g-dev zlib1g:i386 m4 libc6-dev-i386 yarn gawk git-secret gpg
    - gpg --import <(echo "$PGP_PRIVATE_KEY")
    - pip install --upgrade cython==0.28.1 setuptools
    - wget -q https://nodejs.org/dist/v8.11.1/node-v8.11.1-linux-x64.tar.xz
    - tar -xf node-v8.11.1-linux-x64.tar.xz
    - ln -s $CI_PROJECT_DIR/node-v8.11.1-linux-x64/bin/node /usr/bin/node || true
    - ln -s $CI_PROJECT_DIR/node-v8.11.1-linux-x64/bin/npm /usr/bin/npm || true
    - git clone https://github.com/lbryio/buildozer.git
    - cd app
    - npm config set registry="http://registry.npmjs.org/"
    - npm install
    - npm install -g react-native-cli
    - ln -s $CI_PROJECT_DIR/node-v8.11.1-linux-x64/bin/react-native /usr/bin/react-native || true
    - cd ..
    - cd buildozer
    - python setup.py install
    - cd ..
    - mv buildozer.spec.travis buildozer.spec
    - mkdir -p cd ~/.buildozer/android/platform/
    - wget -q 'https://dist.testnet.lbry.tech/crystax-ndk-10.3.2-linux-x86_64.tar.xz' -P ~/.buildozer/android/
    - wget -q 'https://dl.google.com/android/android-sdk_r23-linux.tgz' -P ~/.buildozer/android/platform/
    - wget -q 'https://dl.google.com/android/repository/platform-27_r01.zip' -P ~/.buildozer/android/platform/
    - wget -q 'https://dl.google.com/android/repository/build-tools_r26.0.1-linux.zip' -P ~/.buildozer/android/platform/
    - tar -xf ~/.buildozer/android/crystax-ndk-10.3.2-linux-x86_64.tar.xz -C ~/.buildozer/android/
    - cp -f $CI_PROJECT_DIR/scripts/build-target-python.sh ~/.buildozer/android/crystax-ndk-10.3.2/build/tools/build-target-python.sh
    - rm -rf ~/.buildozer/android/crystax-ndk-10.3.2/platforms/android-9
    - ln -s ~/.buildozer/android/crystax-ndk-10.3.2/platforms/android-21 ~/.buildozer/android/crystax-ndk-10.3.2/platforms/android-9
    - tar -xf ~/.buildozer/android/platform/android-sdk_r23-linux.tgz -C ~/.buildozer/android/platform/
    - mv ~/.buildozer/android/platform/android-sdk-linux ~/.buildozer/android/platform/android-sdk-23
    - unzip -qq ~/.buildozer/android/platform/platform-27_r01.zip -d ~/.buildozer/android/platform/android-sdk-23/platforms
    - mv ~/.buildozer/android/platform/android-sdk-23/platforms/android-8.1.0 ~/.buildozer/android/platform/android-sdk-23/platforms/android-27
    - mkdir -p ~/.buildozer/android/platform/android-sdk-23/build-tools
    - unzip -qq ~/.buildozer/android/platform/build-tools_r26.0.1-linux.zip -d ~/.buildozer/android/platform/android-sdk-23/build-tools
    - mv ~/.buildozer/android/platform/android-sdk-23/build-tools/android-8.0.0 ~/.buildozer/android/platform/android-sdk-23/build-tools/26.0.1
    - mkdir -p ~/.buildozer/android/platform/android-sdk-23/licenses
    - echo $'\nd56f5187479451eabf01fb78af6dfcb131a6481e' > ~/.buildozer/android/platform/android-sdk-23/licenses/android-sdk-license
    - git secret reveal
    - "./release.sh | grep -Fv -e 'working:' -e 'copy' -e 'Compiling' --line-buffered"
    - cp $CI_PROJECT_DIR/bin/*.apk /dev/null
